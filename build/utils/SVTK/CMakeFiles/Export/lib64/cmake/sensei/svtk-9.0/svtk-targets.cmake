# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget SVTK::kwiml SVTK::svtksys SVTK::utf8 SVTK::CommonCore SVTK::CommonMath SVTK::CommonTransforms SVTK::CommonMisc SVTK::CommonSystem SVTK::CommonDataModel)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target SVTK::kwiml
add_library(SVTK::kwiml INTERFACE IMPORTED)

set_target_properties(SVTK::kwiml PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0/"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/svtk-9.0/"
)

# Create imported target SVTK::svtksys
add_library(SVTK::svtksys STATIC IMPORTED)

set_target_properties(SVTK::svtksys PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0;${_IMPORT_PREFIX}/include/svtk-9.0/"
  INTERFACE_LINK_LIBRARIES "dl;dl"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/svtk-9.0/"
)

# Create imported target SVTK::utf8
add_library(SVTK::utf8 INTERFACE IMPORTED)

set_target_properties(SVTK::utf8 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0/"
  INTERFACE_SYSTEM_INCLUDE_DIRECTORIES "include/svtk-9.0/"
)

# Create imported target SVTK::CommonCore
add_library(SVTK::CommonCore STATIC IMPORTED)

set_target_properties(SVTK::CommonCore PROPERTIES
  INTERFACE_COMPILE_FEATURES "cxx_std_11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::kwiml;SVTK::svtksys;\$<LINK_ONLY:SVTK::utf8>;Threads::Threads;\$<LINK_ONLY:\$<\$<PLATFORM_ID:SunOS>:socket>>;\$<LINK_ONLY:\$<\$<PLATFORM_ID:SunOS>:nsl>>;\$<LINK_ONLY:\$<\$<PLATFORM_ID:Android>:log>>"
)

# Create imported target SVTK::CommonMath
add_library(SVTK::CommonMath STATIC IMPORTED)

set_target_properties(SVTK::CommonMath PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::CommonCore"
)

# Create imported target SVTK::CommonTransforms
add_library(SVTK::CommonTransforms STATIC IMPORTED)

set_target_properties(SVTK::CommonTransforms PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::CommonCore;SVTK::CommonMath;\$<LINK_ONLY:SVTK::svtksys>"
)

# Create imported target SVTK::CommonMisc
add_library(SVTK::CommonMisc STATIC IMPORTED)

set_target_properties(SVTK::CommonMisc PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::CommonCore;SVTK::CommonMath;\$<LINK_ONLY:SVTK::svtksys>"
)

# Create imported target SVTK::CommonSystem
add_library(SVTK::CommonSystem STATIC IMPORTED)

set_target_properties(SVTK::CommonSystem PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::CommonCore;\$<LINK_ONLY:SVTK::svtksys>;\$<LINK_ONLY:\$<\$<PLATFORM_ID:WIN32>:wsock32>>;\$<LINK_ONLY:Threads::Threads>"
)

# Create imported target SVTK::CommonDataModel
add_library(SVTK::CommonDataModel STATIC IMPORTED)

set_target_properties(SVTK::CommonDataModel PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include/svtk-9.0"
  INTERFACE_LINK_LIBRARIES "SVTK::CommonCore;SVTK::CommonMath;SVTK::CommonTransforms;\$<LINK_ONLY:SVTK::CommonMisc>;\$<LINK_ONLY:SVTK::CommonSystem>;\$<LINK_ONLY:SVTK::svtksys>"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/svtk-targets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
